name: build

on:
  schedule:
    - cron: '0 0 * * *'  # Schedule the workflow to run daily
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.compiler.cc }} build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          # - windows-latest
          - ubuntu-latest
          - macos-latest
        compiler:
          - { cc: gcc, cxx: g++ }
          - { cc: clang, cxx: clang++ }

      fail-fast: false

    env:
      CC: ${{ matrix.compiler.cc }}
      CXX: ${{ matrix.compiler.cxx }}

    steps:
      - name: Run git clone
        run: git clone https://github.com/JayXon/Leanify

      - name: Print compiler version
        run: ${{ matrix.compiler.cc }} --version

      - name: Run make
        run: cd Leanify; make

        
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          files: |
            # Add your build artifacts or release files here
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          body: |
            Release notes go here

      - name: check
        run: pwd; ls
        
      - name: Upload Release Asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        with:
          asset_path: ./
          asset_name: Leanify
          asset_content_type: application/zip # Replace with the appropriate content type
          release_id: ${{ steps.create_release.outputs.id }}
          token: ${{ secrets.GITHUB_TOKEN }}
