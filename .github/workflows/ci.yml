name: build

on:
  schedule:
    - cron: '0 0 * * *'  # Schedule the workflow to run daily
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.compiler.cc }} build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          # - windows-latest
          - ubuntu-latest
          - macos-latest
        compiler:
          - { cc: gcc, cxx: g++ }
          - { cc: clang, cxx: clang++ }

      fail-fast: false

    env:
      CC: ${{ matrix.compiler.cc }}
      CXX: ${{ matrix.compiler.cxx }}

    steps:
      - name: Run git clone
        run: git clone https://github.com/JayXon/Leanify

      - name: Run make, print useful info, and set working dir
        id: make
        run: |
          echo
          cd Leanify
          ${{ matrix.compiler.cc }} --version
          make
          echo "${GITHUB_WORKSPACE}/Leanify/leanify" >> $GITHUB_STATE/asset_path

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: Run-${{ github.run_number }}-id-${{ github.run_id }}-on-${{ matrix.os }}-with-${{ matrix.compiler.cc }}
          release_name: Automated prerelease ${{ github.run_number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.GITHUB_STATE }}/asset_path
          asset_name: "leanify: ${{ matrix.os }} with ${{ matrix.compiler.cc }}"
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
